# Generated by Makefile. Do not edit.
CC = pocc
LD = polink

CFLAGS = 
LDFLAGS = 

TESTS = \
	array-param.exe \
	assume.exe \
	cast.exe \
	const.exe \
	constant.exe \
	deprecated.exe \
	fallthrough.exe \
	flags.exe \
	inline.exe \
	likely.exe \
	malloc.exe \
	message.exe \
	noinline.exe \
	no-return.exe \
	non-null.exe \
	predict.exe \
	printf-format.exe \
	pure.exe \
	require.exe \
	restrict.exe \
	returns-non-null.exe \
	sentinel.exe \
	static-assert.exe \
	stringify.exe \
	unknown-pragmas.exe \
	unavailable.exe \
	unreachable.exe \
	visibility.exe \
	warn.exe \
	warn-unused-result.exe \
	$(NULL)

CLEANFILES = $(TESTS) \
	array-param.obj array-param.exe \
	assume.obj assume.exe \
	cast.obj cast.exe \
	const.obj const.exe \
	constant.obj constant.exe \
	deprecated.obj deprecated.exe \
	fallthrough.obj fallthrough.exe \
	flags.obj flags.exe \
	inline.obj inline.exe \
	likely.obj likely.exe \
	malloc.obj malloc.exe \
	message.obj message.exe \
	noinline.obj noinline.exe \
	no-return.obj no-return.exe \
	non-null.obj non-null.exe \
	predict.obj predict.exe \
	printf-format.obj printf-format.exe \
	pure.obj pure.exe \
	require.obj require.exe \
	restrict.obj restrict.exe \
	returns-non-null.obj returns-non-null.exe \
	sentinel.obj sentinel.exe \
	static-assert.obj static-assert.exe \
	stringify.obj stringify.exe \
	unknown-pragmas.obj unknown-pragmas.exe \
	unavailable.obj unavailable.exe \
	unreachable.obj unreachable.exe \
	visibility.obj visibility.exe \
	warn.obj warn.exe \
	warn-unused-result.obj warn-unused-result.exe \
	$(NULL)

all: $(TESTS)

clean:
	del /Q $(CLEANFILES)

array-param.obj: array-param.c
	$(CC) $(CFLAGS) array-param.c

array-param.exe: array-param.obj
	$(LD) $(LDFLAGS) /OUT:array-param.exe array-param.obj

assume.obj: assume.c
	$(CC) $(CFLAGS) assume.c

assume.exe: assume.obj
	$(LD) $(LDFLAGS) /OUT:assume.exe assume.obj

cast.obj: cast.c
	$(CC) $(CFLAGS) cast.c

cast.exe: cast.obj
	$(LD) $(LDFLAGS) /OUT:cast.exe cast.obj

const.obj: const.c
	$(CC) $(CFLAGS) const.c

const.exe: const.obj
	$(LD) $(LDFLAGS) /OUT:const.exe const.obj

constant.obj: constant.c
	$(CC) $(CFLAGS) constant.c

constant.exe: constant.obj
	$(LD) $(LDFLAGS) /OUT:constant.exe constant.obj

deprecated.obj: deprecated.c
	$(CC) $(CFLAGS) deprecated.c

deprecated.exe: deprecated.obj
	$(LD) $(LDFLAGS) /OUT:deprecated.exe deprecated.obj

fallthrough.obj: fallthrough.c
	$(CC) $(CFLAGS) fallthrough.c

fallthrough.exe: fallthrough.obj
	$(LD) $(LDFLAGS) /OUT:fallthrough.exe fallthrough.obj

flags.obj: flags.c
	$(CC) $(CFLAGS) flags.c

flags.exe: flags.obj
	$(LD) $(LDFLAGS) /OUT:flags.exe flags.obj

inline.obj: inline.c
	$(CC) $(CFLAGS) inline.c

inline.exe: inline.obj
	$(LD) $(LDFLAGS) /OUT:inline.exe inline.obj

likely.obj: likely.c
	$(CC) $(CFLAGS) likely.c

likely.exe: likely.obj
	$(LD) $(LDFLAGS) /OUT:likely.exe likely.obj

malloc.obj: malloc.c
	$(CC) $(CFLAGS) malloc.c

malloc.exe: malloc.obj
	$(LD) $(LDFLAGS) /OUT:malloc.exe malloc.obj

message.obj: message.c
	$(CC) $(CFLAGS) message.c

message.exe: message.obj
	$(LD) $(LDFLAGS) /OUT:message.exe message.obj

noinline.obj: noinline.c
	$(CC) $(CFLAGS) noinline.c

noinline.exe: noinline.obj
	$(LD) $(LDFLAGS) /OUT:noinline.exe noinline.obj

no-return.obj: no-return.c
	$(CC) $(CFLAGS) no-return.c

no-return.exe: no-return.obj
	$(LD) $(LDFLAGS) /OUT:no-return.exe no-return.obj

non-null.obj: non-null.c
	$(CC) $(CFLAGS) non-null.c

non-null.exe: non-null.obj
	$(LD) $(LDFLAGS) /OUT:non-null.exe non-null.obj

predict.obj: predict.c
	$(CC) $(CFLAGS) predict.c

predict.exe: predict.obj
	$(LD) $(LDFLAGS) /OUT:predict.exe predict.obj

printf-format.obj: printf-format.c
	$(CC) $(CFLAGS) printf-format.c

printf-format.exe: printf-format.obj
	$(LD) $(LDFLAGS) /OUT:printf-format.exe printf-format.obj

pure.obj: pure.c
	$(CC) $(CFLAGS) pure.c

pure.exe: pure.obj
	$(LD) $(LDFLAGS) /OUT:pure.exe pure.obj

require.obj: require.c
	$(CC) $(CFLAGS) require.c

require.exe: require.obj
	$(LD) $(LDFLAGS) /OUT:require.exe require.obj

restrict.obj: restrict.c
	$(CC) $(CFLAGS) restrict.c

restrict.exe: restrict.obj
	$(LD) $(LDFLAGS) /OUT:restrict.exe restrict.obj

returns-non-null.obj: returns-non-null.c
	$(CC) $(CFLAGS) returns-non-null.c

returns-non-null.exe: returns-non-null.obj
	$(LD) $(LDFLAGS) /OUT:returns-non-null.exe returns-non-null.obj

sentinel.obj: sentinel.c
	$(CC) $(CFLAGS) sentinel.c

sentinel.exe: sentinel.obj
	$(LD) $(LDFLAGS) /OUT:sentinel.exe sentinel.obj

static-assert.obj: static-assert.c
	$(CC) $(CFLAGS) static-assert.c

static-assert.exe: static-assert.obj
	$(LD) $(LDFLAGS) /OUT:static-assert.exe static-assert.obj

stringify.obj: stringify.c
	$(CC) $(CFLAGS) stringify.c

stringify.exe: stringify.obj
	$(LD) $(LDFLAGS) /OUT:stringify.exe stringify.obj

unknown-pragmas.obj: unknown-pragmas.c
	$(CC) $(CFLAGS) unknown-pragmas.c

unknown-pragmas.exe: unknown-pragmas.obj
	$(LD) $(LDFLAGS) /OUT:unknown-pragmas.exe unknown-pragmas.obj

unavailable.obj: unavailable.c
	$(CC) $(CFLAGS) unavailable.c

unavailable.exe: unavailable.obj
	$(LD) $(LDFLAGS) /OUT:unavailable.exe unavailable.obj

unreachable.obj: unreachable.c
	$(CC) $(CFLAGS) unreachable.c

unreachable.exe: unreachable.obj
	$(LD) $(LDFLAGS) /OUT:unreachable.exe unreachable.obj

visibility.obj: visibility.c
	$(CC) $(CFLAGS) visibility.c

visibility.exe: visibility.obj
	$(LD) $(LDFLAGS) /OUT:visibility.exe visibility.obj

warn.obj: warn.c
	$(CC) $(CFLAGS) warn.c

warn.exe: warn.obj
	$(LD) $(LDFLAGS) /OUT:warn.exe warn.obj

warn-unused-result.obj: warn-unused-result.c
	$(CC) $(CFLAGS) warn-unused-result.c

warn-unused-result.exe: warn-unused-result.obj
	$(LD) $(LDFLAGS) /OUT:warn-unused-result.exe warn-unused-result.obj

